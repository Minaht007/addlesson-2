{"mappings":"AAAA,MCAaA,EAAe,CAACC,EAAOC,KAClCA,EAAIC,UAAY,GAEhB,MAAMC,EAASH,EACZI,KACC,EAACC,OAAEA,EAAMC,MAAEA,EAAKC,YAAEA,EAAWC,UAAEA,EAASC,GAAEA,KAAoB,sDACjBA,wLAIrBA,kDAERJ,qEAEAC,iOAMoFA,iHAEtFC,+GAG0BC,qRASvBC,+DAMlBC,KAAK,IAERT,EAAIU,mBAAmB,YAAaR,EAAO,ECtCvCS,EAAWC,SAASC,cAAc,iBAClCC,EAAYF,SAASC,cAAc,kBAGnCE,EAAcC,UAClB,IACE,MAAMjB,OFPiBiB,WACzB,MAAMC,QAAiBC,MAAM,qDAE7B,IAAKD,EAASE,GACZ,MAAM,IAAIC,MAAM,wBAGlB,aAAaH,EAASI,MAAM,EEANC,GACpBxB,EAAaC,EAAOY,E,CACpB,MAAOY,GACPC,QAAQD,MAAM,UAAWA,E,GAI7BR,IAwBAD,EAAUW,iBAAiB,UArBFT,MAAMU,IAC7BA,EAAEC,iBAEF,MAAMtB,EAAQqB,EAAEE,cAAcC,SAASxB,MAAMyB,MAAMC,OAC7CzB,EAAcoB,EAAEE,cAAcC,SAASvB,YAAYwB,MAAMC,OAE/D,IAAK1B,IAAUC,EAAa,OAAO0B,MAAM,2BAEzC,SFdwBhB,OAAMiB,IAC9B,MAAMhB,QAAiBC,MAAM,oDAAqB,CAChDgB,OAAQ,OACRC,QAAS,CACP,eAAgB,kCAElBC,KAAMC,KAAKC,UAAUL,KAGvB,IAAKhB,EAASE,GACZ,MAAM,IAAIC,MAAM,wBAGlB,aAAaH,EAASI,MAAM,EEEpBkB,CAAe,C,MACnBlC,E,YACAC,IAGFS,G,CACA,MAAOQ,GACPC,QAAQD,MAAM,UAAWA,E","sources":["src/js/api.js","src/js/renderMarkup.js","src/index.js"],"sourcesContent":["const BASE_URL = 'https://626645cf63e0f382567f1db9.mockapi.io';\n\n// Get all todos, method: GET\nexport const getAllTodos = async () => {\n  const response = await fetch(`${BASE_URL}/todos`);\n\n  if (!response.ok) {\n    throw new Error('Something went wrong');\n  }\n\n  return await response.json();\n};\n\n// Create todo, method: POST\nexport const createTodo = async todo => {\n  const response = await fetch(`${BASE_URL}/todos`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json;charset=utf-8',\n    },\n    body: JSON.stringify(todo),\n  });\n\n  if (!response.ok) {\n    throw new Error('Something went wrong');\n  }\n\n  return await response.json();\n};\n","export const renderMarkup = (todos, ref) => {\n  ref.innerHTML = '';\n\n  const markup = todos\n    .map(\n      ({ poster, title, description, createdAt, id }) => /* html */ `\n      <div class=\"col-md-4 rounded-3 js-card\" id=${id}>\n        <div class=\"card mb-3 position-relative\" style=\"max-width: 540px\">\n          <div class=\"row g-0\">\n            <div class=\"col-md-4 p-3\">\n            <b class=\"mb-1\">${id}</b>\n              <img\n                src=${poster}\n                class=\"img-fluid rounded\"\n                alt=${title}\n              />\n\n            </div>\n            <div class=\"col-md-8\">\n              <div class=\"card-body\">\n                <h5 class=\"card-title text-uppercase fw-bolder text-truncate\" style=\"max-width: 150px;\">${title}</h5>\n                <p class=\"d-inline-block text-truncate\" style=\"max-width: 150px;\">\n                  ${description}\n                </p>\n                <p class=\"card-text\">\n                  <small class=\"text-muted\">${createdAt}</small>\n                </p>\n              </div>\n            </div>\n          </div>\n          <button\n            type=\"button\"\n            class=\"btn-close position-absolute top-0 start-100 translate-middle\"\n            aria-label=\"Close\"\n            data-id=\"${id}\"\n          ></button>\n        </div>\n      </div>\n  `\n    )\n    .join('');\n\n  ref.insertAdjacentHTML('beforeend', markup);\n};\n","import 'material-icons/iconfont/material-icons.css';\nimport * as API from './js/api';\nimport { renderMarkup } from './js/renderMarkup';\n\nconst todoList = document.querySelector('.js-todo-list');\nconst modalForm = document.querySelector('.js-modal-form');\n\n// Get all todos\nconst getAllTodos = async () => {\n  try {\n    const todos = await API.getAllTodos();\n    renderMarkup(todos, todoList);\n  } catch (error) {\n    console.error('ERROR: ', error);\n  }\n};\n\ngetAllTodos();\n\n// Function for form submit\nconst handleFormSubmit = async e => {\n  e.preventDefault();\n\n  const title = e.currentTarget.elements.title.value.trim();\n  const description = e.currentTarget.elements.description.value.trim();\n\n  if (!title || !description) return alert('Please fill all fields!');\n\n  try {\n    await API.createTodo({\n      title,\n      description,\n    });\n\n    getAllTodos();\n  } catch (error) {\n    console.error('ERROR: ', error);\n  }\n};\n\n// Listen for form submit\nmodalForm.addEventListener('submit', handleFormSubmit);\n"],"names":["$8fa1c37b43059e2f$export$add40575555c273c","todos","ref","innerHTML","markup","map","poster","title","description","createdAt","id","join","insertAdjacentHTML","$1f0dc3b9307be026$var$todoList","document","querySelector","$1f0dc3b9307be026$var$modalForm","$1f0dc3b9307be026$var$getAllTodos","async","response","fetch","ok","Error","json","$56ca17bb174b0ce3$export$fa2ca293729f61d0","error","console","addEventListener","e","preventDefault","currentTarget","elements","value","trim","alert","todo","method","headers","body","JSON","stringify","$56ca17bb174b0ce3$export$c3b1bf9bee0d44d3"],"version":3,"file":"index.4d83ae7a.js.map"}